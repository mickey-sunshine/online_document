.. _manual_project_tree_netlist:

Netlist Development
-------------------

.. _manual_project_tree_netlist_run:

Runs
~~~~

The workspace may contains a number of runs for netlists, each of which represents a different version of netlists corresponding to a specific run of architecture (See details in :ref:`manual_project_tree_arch_run`).

For example, in the project ``alkaid_exto``, three runs ``iter0``, ``iter1`` and ``iter2`` are created by users.

.. code-block::

  alkaid_exto/alkaid_exto_netlist/
  ├── iter0
  ├── iter1
  └── iter2

- Note that the name of run can be customized by user. In practice, various names may be expected.
- However, each sub-directory under the arch workspace represents an independent run.
- There are no data dependencies between runs

.. _manual_project_tree_netlist_workspace:

Workspace
~~~~~~~~~

In each run, the workspace is organized as follows:

Here, take the example of run ``iter0`` of project ``alkaid_exto``

.. code-block::

  alkaid_exto/alkaid_ex_netlist/
  └── iter0
      ├── arch -> ../../alkaid_ex_arch/iter0/arch
      ├── netlist
      ├── openfpga_tasks
      ├── qor_signoff
      ├── reports
      └── synth

- ``arch`` is linked to a specific architecture run
- ``openfpga_tasks`` contains a number of runtime directories, where netlists are generated and analyzed. This directory does not contain golden copies.
- ``qor_signoff`` contains the runtime scripts and workspace to perform QoR extraction on the netlists
- ``reports`` contains golden reports on the netlists
- ``synth`` contains the runtime scripts and workspace for netlist synthesis
- ``netlist`` is the golden copies of netlists, which is the data pack for the downstream development

The netlist sub-directory includes a number of netlists 

.. code-block::

  alkaid_exto/alkaid_ex_netlist/iter0/netlist/
  ├── gl
  │   ├── dp
  │   └── ultimate
  ├── raw_rtl
  │   ├── dp
  │   └── ultimate
  └── rtl
      ├── dp
      └── ultimate

- ``gl`` represents the gate-level netlists
- ``raw_rtl`` is the RTL-level netlists directly generated by OpenFPGA
- ``rtl`` is the RTL netlists after netlist makeup process is applied

.. note:: For fabric definition, refer to :ref:`manual_project_tree_arch_workspace`
